/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddAssetsToAlbum201ResponseErrorsInnerErrors struct for AddAssetsToAlbum201ResponseErrorsInnerErrors
type AddAssetsToAlbum201ResponseErrorsInnerErrors struct {
	Asset []string `json:"asset,omitempty"`
}

// NewAddAssetsToAlbum201ResponseErrorsInnerErrors instantiates a new AddAssetsToAlbum201ResponseErrorsInnerErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAssetsToAlbum201ResponseErrorsInnerErrors() *AddAssetsToAlbum201ResponseErrorsInnerErrors {
	this := AddAssetsToAlbum201ResponseErrorsInnerErrors{}
	return &this
}

// NewAddAssetsToAlbum201ResponseErrorsInnerErrorsWithDefaults instantiates a new AddAssetsToAlbum201ResponseErrorsInnerErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAssetsToAlbum201ResponseErrorsInnerErrorsWithDefaults() *AddAssetsToAlbum201ResponseErrorsInnerErrors {
	this := AddAssetsToAlbum201ResponseErrorsInnerErrors{}
	return &this
}

// GetAsset returns the Asset field value if set, zero value otherwise.
func (o *AddAssetsToAlbum201ResponseErrorsInnerErrors) GetAsset() []string {
	if o == nil || o.Asset == nil {
		var ret []string
		return ret
	}
	return o.Asset
}

// GetAssetOk returns a tuple with the Asset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAssetsToAlbum201ResponseErrorsInnerErrors) GetAssetOk() ([]string, bool) {
	if o == nil || o.Asset == nil {
		return nil, false
	}
	return o.Asset, true
}

// HasAsset returns a boolean if a field has been set.
func (o *AddAssetsToAlbum201ResponseErrorsInnerErrors) HasAsset() bool {
	if o != nil && o.Asset != nil {
		return true
	}

	return false
}

// SetAsset gets a reference to the given []string and assigns it to the Asset field.
func (o *AddAssetsToAlbum201ResponseErrorsInnerErrors) SetAsset(v []string) {
	o.Asset = v
}

func (o AddAssetsToAlbum201ResponseErrorsInnerErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Asset != nil {
		toSerialize["asset"] = o.Asset
	}
	return json.Marshal(toSerialize)
}

type NullableAddAssetsToAlbum201ResponseErrorsInnerErrors struct {
	value *AddAssetsToAlbum201ResponseErrorsInnerErrors
	isSet bool
}

func (v NullableAddAssetsToAlbum201ResponseErrorsInnerErrors) Get() *AddAssetsToAlbum201ResponseErrorsInnerErrors {
	return v.value
}

func (v *NullableAddAssetsToAlbum201ResponseErrorsInnerErrors) Set(val *AddAssetsToAlbum201ResponseErrorsInnerErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAssetsToAlbum201ResponseErrorsInnerErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAssetsToAlbum201ResponseErrorsInnerErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAssetsToAlbum201ResponseErrorsInnerErrors(val *AddAssetsToAlbum201ResponseErrorsInnerErrors) *NullableAddAssetsToAlbum201ResponseErrorsInnerErrors {
	return &NullableAddAssetsToAlbum201ResponseErrorsInnerErrors{value: val, isSet: true}
}

func (v NullableAddAssetsToAlbum201ResponseErrorsInnerErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAssetsToAlbum201ResponseErrorsInnerErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AlbumPayloadPublishInfoRemoteLinks Links to affiliated URLs on the publishing service.
type AlbumPayloadPublishInfoRemoteLinks struct {
	Edit *AlbumPayloadPublishInfoRemoteLinksEdit `json:"edit,omitempty"`
	View *AlbumPayloadPublishInfoRemoteLinksView `json:"view,omitempty"`
}

// NewAlbumPayloadPublishInfoRemoteLinks instantiates a new AlbumPayloadPublishInfoRemoteLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlbumPayloadPublishInfoRemoteLinks() *AlbumPayloadPublishInfoRemoteLinks {
	this := AlbumPayloadPublishInfoRemoteLinks{}
	return &this
}

// NewAlbumPayloadPublishInfoRemoteLinksWithDefaults instantiates a new AlbumPayloadPublishInfoRemoteLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlbumPayloadPublishInfoRemoteLinksWithDefaults() *AlbumPayloadPublishInfoRemoteLinks {
	this := AlbumPayloadPublishInfoRemoteLinks{}
	return &this
}

// GetEdit returns the Edit field value if set, zero value otherwise.
func (o *AlbumPayloadPublishInfoRemoteLinks) GetEdit() AlbumPayloadPublishInfoRemoteLinksEdit {
	if o == nil || o.Edit == nil {
		var ret AlbumPayloadPublishInfoRemoteLinksEdit
		return ret
	}
	return *o.Edit
}

// GetEditOk returns a tuple with the Edit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlbumPayloadPublishInfoRemoteLinks) GetEditOk() (*AlbumPayloadPublishInfoRemoteLinksEdit, bool) {
	if o == nil || o.Edit == nil {
		return nil, false
	}
	return o.Edit, true
}

// HasEdit returns a boolean if a field has been set.
func (o *AlbumPayloadPublishInfoRemoteLinks) HasEdit() bool {
	if o != nil && o.Edit != nil {
		return true
	}

	return false
}

// SetEdit gets a reference to the given AlbumPayloadPublishInfoRemoteLinksEdit and assigns it to the Edit field.
func (o *AlbumPayloadPublishInfoRemoteLinks) SetEdit(v AlbumPayloadPublishInfoRemoteLinksEdit) {
	o.Edit = &v
}

// GetView returns the View field value if set, zero value otherwise.
func (o *AlbumPayloadPublishInfoRemoteLinks) GetView() AlbumPayloadPublishInfoRemoteLinksView {
	if o == nil || o.View == nil {
		var ret AlbumPayloadPublishInfoRemoteLinksView
		return ret
	}
	return *o.View
}

// GetViewOk returns a tuple with the View field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlbumPayloadPublishInfoRemoteLinks) GetViewOk() (*AlbumPayloadPublishInfoRemoteLinksView, bool) {
	if o == nil || o.View == nil {
		return nil, false
	}
	return o.View, true
}

// HasView returns a boolean if a field has been set.
func (o *AlbumPayloadPublishInfoRemoteLinks) HasView() bool {
	if o != nil && o.View != nil {
		return true
	}

	return false
}

// SetView gets a reference to the given AlbumPayloadPublishInfoRemoteLinksView and assigns it to the View field.
func (o *AlbumPayloadPublishInfoRemoteLinks) SetView(v AlbumPayloadPublishInfoRemoteLinksView) {
	o.View = &v
}

func (o AlbumPayloadPublishInfoRemoteLinks) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Edit != nil {
		toSerialize["edit"] = o.Edit
	}
	if o.View != nil {
		toSerialize["view"] = o.View
	}
	return json.Marshal(toSerialize)
}

type NullableAlbumPayloadPublishInfoRemoteLinks struct {
	value *AlbumPayloadPublishInfoRemoteLinks
	isSet bool
}

func (v NullableAlbumPayloadPublishInfoRemoteLinks) Get() *AlbumPayloadPublishInfoRemoteLinks {
	return v.value
}

func (v *NullableAlbumPayloadPublishInfoRemoteLinks) Set(val *AlbumPayloadPublishInfoRemoteLinks) {
	v.value = val
	v.isSet = true
}

func (v NullableAlbumPayloadPublishInfoRemoteLinks) IsSet() bool {
	return v.isSet
}

func (v *NullableAlbumPayloadPublishInfoRemoteLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlbumPayloadPublishInfoRemoteLinks(val *AlbumPayloadPublishInfoRemoteLinks) *NullableAlbumPayloadPublishInfoRemoteLinks {
	return &NullableAlbumPayloadPublishInfoRemoteLinks{value: val, isSet: true}
}

func (v NullableAlbumPayloadPublishInfoRemoteLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlbumPayloadPublishInfoRemoteLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



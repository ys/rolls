/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// InvaildRequestGroup struct for InvaildRequestGroup
type InvaildRequestGroup struct {
	Errors *InvaildRequestGroupErrors `json:"errors,omitempty"`
	Code *int32 `json:"code,omitempty"`
	Description *string `json:"description,omitempty"`
}

// NewInvaildRequestGroup instantiates a new InvaildRequestGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInvaildRequestGroup() *InvaildRequestGroup {
	this := InvaildRequestGroup{}
	return &this
}

// NewInvaildRequestGroupWithDefaults instantiates a new InvaildRequestGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInvaildRequestGroupWithDefaults() *InvaildRequestGroup {
	this := InvaildRequestGroup{}
	return &this
}

// GetErrors returns the Errors field value if set, zero value otherwise.
func (o *InvaildRequestGroup) GetErrors() InvaildRequestGroupErrors {
	if o == nil || o.Errors == nil {
		var ret InvaildRequestGroupErrors
		return ret
	}
	return *o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvaildRequestGroup) GetErrorsOk() (*InvaildRequestGroupErrors, bool) {
	if o == nil || o.Errors == nil {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *InvaildRequestGroup) HasErrors() bool {
	if o != nil && o.Errors != nil {
		return true
	}

	return false
}

// SetErrors gets a reference to the given InvaildRequestGroupErrors and assigns it to the Errors field.
func (o *InvaildRequestGroup) SetErrors(v InvaildRequestGroupErrors) {
	o.Errors = &v
}

// GetCode returns the Code field value if set, zero value otherwise.
func (o *InvaildRequestGroup) GetCode() int32 {
	if o == nil || o.Code == nil {
		var ret int32
		return ret
	}
	return *o.Code
}

// GetCodeOk returns a tuple with the Code field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvaildRequestGroup) GetCodeOk() (*int32, bool) {
	if o == nil || o.Code == nil {
		return nil, false
	}
	return o.Code, true
}

// HasCode returns a boolean if a field has been set.
func (o *InvaildRequestGroup) HasCode() bool {
	if o != nil && o.Code != nil {
		return true
	}

	return false
}

// SetCode gets a reference to the given int32 and assigns it to the Code field.
func (o *InvaildRequestGroup) SetCode(v int32) {
	o.Code = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *InvaildRequestGroup) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InvaildRequestGroup) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *InvaildRequestGroup) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *InvaildRequestGroup) SetDescription(v string) {
	o.Description = &v
}

func (o InvaildRequestGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Code != nil {
		toSerialize["code"] = o.Code
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableInvaildRequestGroup struct {
	value *InvaildRequestGroup
	isSet bool
}

func (v NullableInvaildRequestGroup) Get() *InvaildRequestGroup {
	return v.value
}

func (v *NullableInvaildRequestGroup) Set(val *InvaildRequestGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableInvaildRequestGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableInvaildRequestGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInvaildRequestGroup(val *InvaildRequestGroup) *NullableInvaildRequestGroup {
	return &NullableInvaildRequestGroup{value: val, isSet: true}
}

func (v NullableInvaildRequestGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInvaildRequestGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



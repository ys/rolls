/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetHealth200Response struct for GetHealth200Response
type GetHealth200Response struct {
	Version *string `json:"version,omitempty"`
}

// NewGetHealth200Response instantiates a new GetHealth200Response object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetHealth200Response() *GetHealth200Response {
	this := GetHealth200Response{}
	return &this
}

// NewGetHealth200ResponseWithDefaults instantiates a new GetHealth200Response object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetHealth200ResponseWithDefaults() *GetHealth200Response {
	this := GetHealth200Response{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *GetHealth200Response) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetHealth200Response) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *GetHealth200Response) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *GetHealth200Response) SetVersion(v string) {
	o.Version = &v
}

func (o GetHealth200Response) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	return json.Marshal(toSerialize)
}

type NullableGetHealth200Response struct {
	value *GetHealth200Response
	isSet bool
}

func (v NullableGetHealth200Response) Get() *GetHealth200Response {
	return v.value
}

func (v *NullableGetHealth200Response) Set(val *GetHealth200Response) {
	v.value = val
	v.isSet = true
}

func (v NullableGetHealth200Response) IsSet() bool {
	return v.isSet
}

func (v *NullableGetHealth200Response) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetHealth200Response(val *GetHealth200Response) *NullableGetHealth200Response {
	return &NullableGetHealth200Response{value: val, isSet: true}
}

func (v NullableGetHealth200Response) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetHealth200Response) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// CreateAssetRequestPayload struct for CreateAssetRequestPayload
type CreateAssetRequestPayload struct {
	// datetime in ISO-8601 format (e.g. 2016-01-15T16:18:00-05:00) with both date and time required, including seconds, but timezone optional. Also flexible on allowing some nonstandard timezone formats like 2016-01-15T12:10:32+0000 or 2016-01-15T12:10:32-05.
	UserCreated *string `json:"userCreated,omitempty"`
	// datetime in ISO-8601 format (e.g. 2016-01-15T16:18:00-05:00) with both date and time required, including seconds, but timezone optional. Also flexible on allowing some nonstandard timezone formats like 2016-01-15T12:10:32+0000 or 2016-01-15T12:10:32-05.
	UserUpdated *string `json:"userUpdated,omitempty"`
	// Capture date of the asset in ISO-8601 format. Will be populated by the server automatically from the master if set to '0000-00-00T00:00:00'
	CaptureDate *string `json:"captureDate,omitempty"`
	ImportSource *CreateAssetRequestPayloadImportSource `json:"importSource,omitempty"`
}

// NewCreateAssetRequestPayload instantiates a new CreateAssetRequestPayload object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAssetRequestPayload() *CreateAssetRequestPayload {
	this := CreateAssetRequestPayload{}
	return &this
}

// NewCreateAssetRequestPayloadWithDefaults instantiates a new CreateAssetRequestPayload object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAssetRequestPayloadWithDefaults() *CreateAssetRequestPayload {
	this := CreateAssetRequestPayload{}
	return &this
}

// GetUserCreated returns the UserCreated field value if set, zero value otherwise.
func (o *CreateAssetRequestPayload) GetUserCreated() string {
	if o == nil || o.UserCreated == nil {
		var ret string
		return ret
	}
	return *o.UserCreated
}

// GetUserCreatedOk returns a tuple with the UserCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestPayload) GetUserCreatedOk() (*string, bool) {
	if o == nil || o.UserCreated == nil {
		return nil, false
	}
	return o.UserCreated, true
}

// HasUserCreated returns a boolean if a field has been set.
func (o *CreateAssetRequestPayload) HasUserCreated() bool {
	if o != nil && o.UserCreated != nil {
		return true
	}

	return false
}

// SetUserCreated gets a reference to the given string and assigns it to the UserCreated field.
func (o *CreateAssetRequestPayload) SetUserCreated(v string) {
	o.UserCreated = &v
}

// GetUserUpdated returns the UserUpdated field value if set, zero value otherwise.
func (o *CreateAssetRequestPayload) GetUserUpdated() string {
	if o == nil || o.UserUpdated == nil {
		var ret string
		return ret
	}
	return *o.UserUpdated
}

// GetUserUpdatedOk returns a tuple with the UserUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestPayload) GetUserUpdatedOk() (*string, bool) {
	if o == nil || o.UserUpdated == nil {
		return nil, false
	}
	return o.UserUpdated, true
}

// HasUserUpdated returns a boolean if a field has been set.
func (o *CreateAssetRequestPayload) HasUserUpdated() bool {
	if o != nil && o.UserUpdated != nil {
		return true
	}

	return false
}

// SetUserUpdated gets a reference to the given string and assigns it to the UserUpdated field.
func (o *CreateAssetRequestPayload) SetUserUpdated(v string) {
	o.UserUpdated = &v
}

// GetCaptureDate returns the CaptureDate field value if set, zero value otherwise.
func (o *CreateAssetRequestPayload) GetCaptureDate() string {
	if o == nil || o.CaptureDate == nil {
		var ret string
		return ret
	}
	return *o.CaptureDate
}

// GetCaptureDateOk returns a tuple with the CaptureDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestPayload) GetCaptureDateOk() (*string, bool) {
	if o == nil || o.CaptureDate == nil {
		return nil, false
	}
	return o.CaptureDate, true
}

// HasCaptureDate returns a boolean if a field has been set.
func (o *CreateAssetRequestPayload) HasCaptureDate() bool {
	if o != nil && o.CaptureDate != nil {
		return true
	}

	return false
}

// SetCaptureDate gets a reference to the given string and assigns it to the CaptureDate field.
func (o *CreateAssetRequestPayload) SetCaptureDate(v string) {
	o.CaptureDate = &v
}

// GetImportSource returns the ImportSource field value if set, zero value otherwise.
func (o *CreateAssetRequestPayload) GetImportSource() CreateAssetRequestPayloadImportSource {
	if o == nil || o.ImportSource == nil {
		var ret CreateAssetRequestPayloadImportSource
		return ret
	}
	return *o.ImportSource
}

// GetImportSourceOk returns a tuple with the ImportSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAssetRequestPayload) GetImportSourceOk() (*CreateAssetRequestPayloadImportSource, bool) {
	if o == nil || o.ImportSource == nil {
		return nil, false
	}
	return o.ImportSource, true
}

// HasImportSource returns a boolean if a field has been set.
func (o *CreateAssetRequestPayload) HasImportSource() bool {
	if o != nil && o.ImportSource != nil {
		return true
	}

	return false
}

// SetImportSource gets a reference to the given CreateAssetRequestPayloadImportSource and assigns it to the ImportSource field.
func (o *CreateAssetRequestPayload) SetImportSource(v CreateAssetRequestPayloadImportSource) {
	o.ImportSource = &v
}

func (o CreateAssetRequestPayload) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.UserCreated != nil {
		toSerialize["userCreated"] = o.UserCreated
	}
	if o.UserUpdated != nil {
		toSerialize["userUpdated"] = o.UserUpdated
	}
	if o.CaptureDate != nil {
		toSerialize["captureDate"] = o.CaptureDate
	}
	if o.ImportSource != nil {
		toSerialize["importSource"] = o.ImportSource
	}
	return json.Marshal(toSerialize)
}

type NullableCreateAssetRequestPayload struct {
	value *CreateAssetRequestPayload
	isSet bool
}

func (v NullableCreateAssetRequestPayload) Get() *CreateAssetRequestPayload {
	return v.value
}

func (v *NullableCreateAssetRequestPayload) Set(val *CreateAssetRequestPayload) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAssetRequestPayload) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAssetRequestPayload) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAssetRequestPayload(val *CreateAssetRequestPayload) *NullableCreateAssetRequestPayload {
	return &NullableCreateAssetRequestPayload{value: val, isSet: true}
}

func (v NullableCreateAssetRequestPayload) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAssetRequestPayload) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// DeleteAlbum400ResponseErrors struct for DeleteAlbum400ResponseErrors
type DeleteAlbum400ResponseErrors struct {
	Body []string `json:"body,omitempty"`
}

// NewDeleteAlbum400ResponseErrors instantiates a new DeleteAlbum400ResponseErrors object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeleteAlbum400ResponseErrors() *DeleteAlbum400ResponseErrors {
	this := DeleteAlbum400ResponseErrors{}
	return &this
}

// NewDeleteAlbum400ResponseErrorsWithDefaults instantiates a new DeleteAlbum400ResponseErrors object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeleteAlbum400ResponseErrorsWithDefaults() *DeleteAlbum400ResponseErrors {
	this := DeleteAlbum400ResponseErrors{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *DeleteAlbum400ResponseErrors) GetBody() []string {
	if o == nil || o.Body == nil {
		var ret []string
		return ret
	}
	return o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeleteAlbum400ResponseErrors) GetBodyOk() ([]string, bool) {
	if o == nil || o.Body == nil {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *DeleteAlbum400ResponseErrors) HasBody() bool {
	if o != nil && o.Body != nil {
		return true
	}

	return false
}

// SetBody gets a reference to the given []string and assigns it to the Body field.
func (o *DeleteAlbum400ResponseErrors) SetBody(v []string) {
	o.Body = v
}

func (o DeleteAlbum400ResponseErrors) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Body != nil {
		toSerialize["body"] = o.Body
	}
	return json.Marshal(toSerialize)
}

type NullableDeleteAlbum400ResponseErrors struct {
	value *DeleteAlbum400ResponseErrors
	isSet bool
}

func (v NullableDeleteAlbum400ResponseErrors) Get() *DeleteAlbum400ResponseErrors {
	return v.value
}

func (v *NullableDeleteAlbum400ResponseErrors) Set(val *DeleteAlbum400ResponseErrors) {
	v.value = val
	v.isSet = true
}

func (v NullableDeleteAlbum400ResponseErrors) IsSet() bool {
	return v.isSet
}

func (v *NullableDeleteAlbum400ResponseErrors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeleteAlbum400ResponseErrors(val *DeleteAlbum400ResponseErrors) *NullableDeleteAlbum400ResponseErrors {
	return &NullableDeleteAlbum400ResponseErrors{value: val, isSet: true}
}

func (v NullableDeleteAlbum400ResponseErrors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeleteAlbum400ResponseErrors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



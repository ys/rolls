/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListAssetsOfAlbum200ResponseResourcesInnerAsset struct for ListAssetsOfAlbum200ResponseResourcesInnerAsset
type ListAssetsOfAlbum200ResponseResourcesInnerAsset struct {
	Id *string `json:"id,omitempty"`
	Links map[string]interface{} `json:"links,omitempty"`
	Payload map[string]interface{} `json:"payload,omitempty"`
}

// NewListAssetsOfAlbum200ResponseResourcesInnerAsset instantiates a new ListAssetsOfAlbum200ResponseResourcesInnerAsset object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAssetsOfAlbum200ResponseResourcesInnerAsset() *ListAssetsOfAlbum200ResponseResourcesInnerAsset {
	this := ListAssetsOfAlbum200ResponseResourcesInnerAsset{}
	return &this
}

// NewListAssetsOfAlbum200ResponseResourcesInnerAssetWithDefaults instantiates a new ListAssetsOfAlbum200ResponseResourcesInnerAsset object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAssetsOfAlbum200ResponseResourcesInnerAssetWithDefaults() *ListAssetsOfAlbum200ResponseResourcesInnerAsset {
	this := ListAssetsOfAlbum200ResponseResourcesInnerAsset{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) SetId(v string) {
	o.Id = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) GetLinks() map[string]interface{} {
	if o == nil || o.Links == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) SetLinks(v map[string]interface{}) {
	o.Links = v
}

// GetPayload returns the Payload field value if set, zero value otherwise.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) GetPayload() map[string]interface{} {
	if o == nil || o.Payload == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Payload
}

// GetPayloadOk returns a tuple with the Payload field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) GetPayloadOk() (map[string]interface{}, bool) {
	if o == nil || o.Payload == nil {
		return nil, false
	}
	return o.Payload, true
}

// HasPayload returns a boolean if a field has been set.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) HasPayload() bool {
	if o != nil && o.Payload != nil {
		return true
	}

	return false
}

// SetPayload gets a reference to the given map[string]interface{} and assigns it to the Payload field.
func (o *ListAssetsOfAlbum200ResponseResourcesInnerAsset) SetPayload(v map[string]interface{}) {
	o.Payload = v
}

func (o ListAssetsOfAlbum200ResponseResourcesInnerAsset) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	if o.Payload != nil {
		toSerialize["payload"] = o.Payload
	}
	return json.Marshal(toSerialize)
}

type NullableListAssetsOfAlbum200ResponseResourcesInnerAsset struct {
	value *ListAssetsOfAlbum200ResponseResourcesInnerAsset
	isSet bool
}

func (v NullableListAssetsOfAlbum200ResponseResourcesInnerAsset) Get() *ListAssetsOfAlbum200ResponseResourcesInnerAsset {
	return v.value
}

func (v *NullableListAssetsOfAlbum200ResponseResourcesInnerAsset) Set(val *ListAssetsOfAlbum200ResponseResourcesInnerAsset) {
	v.value = val
	v.isSet = true
}

func (v NullableListAssetsOfAlbum200ResponseResourcesInnerAsset) IsSet() bool {
	return v.isSet
}

func (v *NullableListAssetsOfAlbum200ResponseResourcesInnerAsset) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAssetsOfAlbum200ResponseResourcesInnerAsset(val *ListAssetsOfAlbum200ResponseResourcesInnerAsset) *NullableListAssetsOfAlbum200ResponseResourcesInnerAsset {
	return &NullableListAssetsOfAlbum200ResponseResourcesInnerAsset{value: val, isSet: true}
}

func (v NullableListAssetsOfAlbum200ResponseResourcesInnerAsset) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAssetsOfAlbum200ResponseResourcesInnerAsset) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



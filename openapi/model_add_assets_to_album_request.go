/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// AddAssetsToAlbumRequest struct for AddAssetsToAlbumRequest
type AddAssetsToAlbumRequest struct {
	Resources []AddAssetsToAlbumRequestResourcesInner `json:"resources,omitempty"`
}

// NewAddAssetsToAlbumRequest instantiates a new AddAssetsToAlbumRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAddAssetsToAlbumRequest() *AddAssetsToAlbumRequest {
	this := AddAssetsToAlbumRequest{}
	return &this
}

// NewAddAssetsToAlbumRequestWithDefaults instantiates a new AddAssetsToAlbumRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAddAssetsToAlbumRequestWithDefaults() *AddAssetsToAlbumRequest {
	this := AddAssetsToAlbumRequest{}
	return &this
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *AddAssetsToAlbumRequest) GetResources() []AddAssetsToAlbumRequestResourcesInner {
	if o == nil || o.Resources == nil {
		var ret []AddAssetsToAlbumRequestResourcesInner
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AddAssetsToAlbumRequest) GetResourcesOk() ([]AddAssetsToAlbumRequestResourcesInner, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *AddAssetsToAlbumRequest) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []AddAssetsToAlbumRequestResourcesInner and assigns it to the Resources field.
func (o *AddAssetsToAlbumRequest) SetResources(v []AddAssetsToAlbumRequestResourcesInner) {
	o.Resources = v
}

func (o AddAssetsToAlbumRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	return json.Marshal(toSerialize)
}

type NullableAddAssetsToAlbumRequest struct {
	value *AddAssetsToAlbumRequest
	isSet bool
}

func (v NullableAddAssetsToAlbumRequest) Get() *AddAssetsToAlbumRequest {
	return v.value
}

func (v *NullableAddAssetsToAlbumRequest) Set(val *AddAssetsToAlbumRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableAddAssetsToAlbumRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableAddAssetsToAlbumRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAddAssetsToAlbumRequest(val *AddAssetsToAlbumRequest) *NullableAddAssetsToAlbumRequest {
	return &NullableAddAssetsToAlbumRequest{value: val, isSet: true}
}

func (v NullableAddAssetsToAlbumRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAddAssetsToAlbumRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



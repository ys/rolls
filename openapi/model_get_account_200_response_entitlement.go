/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// GetAccount200ResponseEntitlement struct for GetAccount200ResponseEntitlement
type GetAccount200ResponseEntitlement struct {
	// The status can take on one of five values from created, trial, trial_expired, subscriber, and subscriber_expired. The created status indicates the user has not yet stepped into any Creative Cloud offering, whether trial or subscription. It is a minimally-entitled Adobe ID.
	Status *string `json:"status,omitempty"`
	Trial map[string]interface{} `json:"trial,omitempty"`
	CurrentSubs map[string]interface{} `json:"current_subs,omitempty"`
	Storage *GetAccount200ResponseEntitlementStorage `json:"storage,omitempty"`
	DeletionDate *string `json:"deletion_date,omitempty"`
}

// NewGetAccount200ResponseEntitlement instantiates a new GetAccount200ResponseEntitlement object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetAccount200ResponseEntitlement() *GetAccount200ResponseEntitlement {
	this := GetAccount200ResponseEntitlement{}
	return &this
}

// NewGetAccount200ResponseEntitlementWithDefaults instantiates a new GetAccount200ResponseEntitlement object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetAccount200ResponseEntitlementWithDefaults() *GetAccount200ResponseEntitlement {
	this := GetAccount200ResponseEntitlement{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetAccount200ResponseEntitlement) GetStatus() string {
	if o == nil || o.Status == nil {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccount200ResponseEntitlement) GetStatusOk() (*string, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetAccount200ResponseEntitlement) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *GetAccount200ResponseEntitlement) SetStatus(v string) {
	o.Status = &v
}

// GetTrial returns the Trial field value if set, zero value otherwise.
func (o *GetAccount200ResponseEntitlement) GetTrial() map[string]interface{} {
	if o == nil || o.Trial == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Trial
}

// GetTrialOk returns a tuple with the Trial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccount200ResponseEntitlement) GetTrialOk() (map[string]interface{}, bool) {
	if o == nil || o.Trial == nil {
		return nil, false
	}
	return o.Trial, true
}

// HasTrial returns a boolean if a field has been set.
func (o *GetAccount200ResponseEntitlement) HasTrial() bool {
	if o != nil && o.Trial != nil {
		return true
	}

	return false
}

// SetTrial gets a reference to the given map[string]interface{} and assigns it to the Trial field.
func (o *GetAccount200ResponseEntitlement) SetTrial(v map[string]interface{}) {
	o.Trial = v
}

// GetCurrentSubs returns the CurrentSubs field value if set, zero value otherwise.
func (o *GetAccount200ResponseEntitlement) GetCurrentSubs() map[string]interface{} {
	if o == nil || o.CurrentSubs == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.CurrentSubs
}

// GetCurrentSubsOk returns a tuple with the CurrentSubs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccount200ResponseEntitlement) GetCurrentSubsOk() (map[string]interface{}, bool) {
	if o == nil || o.CurrentSubs == nil {
		return nil, false
	}
	return o.CurrentSubs, true
}

// HasCurrentSubs returns a boolean if a field has been set.
func (o *GetAccount200ResponseEntitlement) HasCurrentSubs() bool {
	if o != nil && o.CurrentSubs != nil {
		return true
	}

	return false
}

// SetCurrentSubs gets a reference to the given map[string]interface{} and assigns it to the CurrentSubs field.
func (o *GetAccount200ResponseEntitlement) SetCurrentSubs(v map[string]interface{}) {
	o.CurrentSubs = v
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *GetAccount200ResponseEntitlement) GetStorage() GetAccount200ResponseEntitlementStorage {
	if o == nil || o.Storage == nil {
		var ret GetAccount200ResponseEntitlementStorage
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccount200ResponseEntitlement) GetStorageOk() (*GetAccount200ResponseEntitlementStorage, bool) {
	if o == nil || o.Storage == nil {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *GetAccount200ResponseEntitlement) HasStorage() bool {
	if o != nil && o.Storage != nil {
		return true
	}

	return false
}

// SetStorage gets a reference to the given GetAccount200ResponseEntitlementStorage and assigns it to the Storage field.
func (o *GetAccount200ResponseEntitlement) SetStorage(v GetAccount200ResponseEntitlementStorage) {
	o.Storage = &v
}

// GetDeletionDate returns the DeletionDate field value if set, zero value otherwise.
func (o *GetAccount200ResponseEntitlement) GetDeletionDate() string {
	if o == nil || o.DeletionDate == nil {
		var ret string
		return ret
	}
	return *o.DeletionDate
}

// GetDeletionDateOk returns a tuple with the DeletionDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetAccount200ResponseEntitlement) GetDeletionDateOk() (*string, bool) {
	if o == nil || o.DeletionDate == nil {
		return nil, false
	}
	return o.DeletionDate, true
}

// HasDeletionDate returns a boolean if a field has been set.
func (o *GetAccount200ResponseEntitlement) HasDeletionDate() bool {
	if o != nil && o.DeletionDate != nil {
		return true
	}

	return false
}

// SetDeletionDate gets a reference to the given string and assigns it to the DeletionDate field.
func (o *GetAccount200ResponseEntitlement) SetDeletionDate(v string) {
	o.DeletionDate = &v
}

func (o GetAccount200ResponseEntitlement) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Trial != nil {
		toSerialize["trial"] = o.Trial
	}
	if o.CurrentSubs != nil {
		toSerialize["current_subs"] = o.CurrentSubs
	}
	if o.Storage != nil {
		toSerialize["storage"] = o.Storage
	}
	if o.DeletionDate != nil {
		toSerialize["deletion_date"] = o.DeletionDate
	}
	return json.Marshal(toSerialize)
}

type NullableGetAccount200ResponseEntitlement struct {
	value *GetAccount200ResponseEntitlement
	isSet bool
}

func (v NullableGetAccount200ResponseEntitlement) Get() *GetAccount200ResponseEntitlement {
	return v.value
}

func (v *NullableGetAccount200ResponseEntitlement) Set(val *GetAccount200ResponseEntitlement) {
	v.value = val
	v.isSet = true
}

func (v NullableGetAccount200ResponseEntitlement) IsSet() bool {
	return v.isSet
}

func (v *NullableGetAccount200ResponseEntitlement) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetAccount200ResponseEntitlement(val *GetAccount200ResponseEntitlement) *NullableGetAccount200ResponseEntitlement {
	return &NullableGetAccount200ResponseEntitlement{value: val, isSet: true}
}

func (v NullableGetAccount200ResponseEntitlement) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetAccount200ResponseEntitlement) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}



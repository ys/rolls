/*
Lightroom API Documentation

Lightroom API Documentation, made available through [adobe.io](https://developer.adobe.com). API Change Logs are available [here](https://developer.adobe.com/lightroom/lightroom-api-docs/release-notes/).

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// ListAssetsOfAlbum200ResponseAlbum Contains details of the album whose assets are being fetched
type ListAssetsOfAlbum200ResponseAlbum struct {
	Id *string `json:"id,omitempty"`
	Links map[string]interface{} `json:"links,omitempty"`
}

// NewListAssetsOfAlbum200ResponseAlbum instantiates a new ListAssetsOfAlbum200ResponseAlbum object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListAssetsOfAlbum200ResponseAlbum() *ListAssetsOfAlbum200ResponseAlbum {
	this := ListAssetsOfAlbum200ResponseAlbum{}
	return &this
}

// NewListAssetsOfAlbum200ResponseAlbumWithDefaults instantiates a new ListAssetsOfAlbum200ResponseAlbum object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListAssetsOfAlbum200ResponseAlbumWithDefaults() *ListAssetsOfAlbum200ResponseAlbum {
	this := ListAssetsOfAlbum200ResponseAlbum{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ListAssetsOfAlbum200ResponseAlbum) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAssetsOfAlbum200ResponseAlbum) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ListAssetsOfAlbum200ResponseAlbum) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ListAssetsOfAlbum200ResponseAlbum) SetId(v string) {
	o.Id = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ListAssetsOfAlbum200ResponseAlbum) GetLinks() map[string]interface{} {
	if o == nil || o.Links == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListAssetsOfAlbum200ResponseAlbum) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil || o.Links == nil {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ListAssetsOfAlbum200ResponseAlbum) HasLinks() bool {
	if o != nil && o.Links != nil {
		return true
	}

	return false
}

// SetLinks gets a reference to the given map[string]interface{} and assigns it to the Links field.
func (o *ListAssetsOfAlbum200ResponseAlbum) SetLinks(v map[string]interface{}) {
	o.Links = v
}

func (o ListAssetsOfAlbum200ResponseAlbum) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Links != nil {
		toSerialize["links"] = o.Links
	}
	return json.Marshal(toSerialize)
}

type NullableListAssetsOfAlbum200ResponseAlbum struct {
	value *ListAssetsOfAlbum200ResponseAlbum
	isSet bool
}

func (v NullableListAssetsOfAlbum200ResponseAlbum) Get() *ListAssetsOfAlbum200ResponseAlbum {
	return v.value
}

func (v *NullableListAssetsOfAlbum200ResponseAlbum) Set(val *ListAssetsOfAlbum200ResponseAlbum) {
	v.value = val
	v.isSet = true
}

func (v NullableListAssetsOfAlbum200ResponseAlbum) IsSet() bool {
	return v.isSet
}

func (v *NullableListAssetsOfAlbum200ResponseAlbum) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListAssetsOfAlbum200ResponseAlbum(val *ListAssetsOfAlbum200ResponseAlbum) *NullableListAssetsOfAlbum200ResponseAlbum {
	return &NullableListAssetsOfAlbum200ResponseAlbum{value: val, isSet: true}
}

func (v NullableListAssetsOfAlbum200ResponseAlbum) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListAssetsOfAlbum200ResponseAlbum) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


